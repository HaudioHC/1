# .github/workflows/civitai_sync.yml
name: Civitai Creator Sync

on:
  # 1. 允许手动触发
  workflow_dispatch:
    inputs:
      creator_username:
        description: 'Creator Username to sync'
        required: true
        default: 'civitai'

  # 2. 定时触发：每天 0点 (UTC) 运行一次
  schedule:
    - cron: '0 0 * * *'

jobs:
  sync-and-report:
    runs-on: ubuntu-latest
    
    # 设置环境变量，方便脚本使用。定时任务会使用默认值。
    env:
      # 对于定时任务，直接在这里硬编码你要监控的用户名
      # 对于手动任务，下面的步骤会覆盖这个值
      CREATOR_USERNAME: 'SAKI88' 

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 3. Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 4. Determine Creator Username
        # 如果是手动触发的，使用输入的用户名，否则使用环境变量中的默认值
        run: |
          if [ -n "${{ github.event.inputs.creator_username }}" ]; then
            echo "Using manually specified username: ${{ github.event.inputs.creator_username }}"
            echo "CREATOR_USERNAME=${{ github.event.inputs.creator_username }}" >> $GITHUB_ENV
          else
            echo "Using scheduled username: $CREATOR_USERNAME"
          fi

      - name: 5. Run Sync and Report Script
        run: |
          python sync_and_report.py \
            --username "$CREATOR_USERNAME" \
            --output-dir "./output"

      - name: 6. Commit and Push Changes
        # 这个步骤会自动将 output/ 目录下的清单文件和报告提交回你的仓库
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Auto-sync for ${{ env.CREATOR_USERNAME }}"
          file_pattern: "output/${{ env.CREATOR_USERNAME }}_manifest.json output/reports/*" # 只提交清单和报告
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "actions@github.com"
          commit_author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

      - name: 7. Upload New Images Zip as Artifact
        # 只有当新图片被下载并打包后才上传
        uses: actions/upload-artifact@v4
        with:
          name: new-images-${{ env.CREATOR_USERNAME }}-${{ github.run_id }}
          path: ./output/*.zip
          if-no-files-found: 'ignore' # 如果没有新图片，就没有zip文件，忽略此错误
